/* This file is autogenerated. DO NOT CHANGE. All changes will be lost */

#pragma once

#include <QObject>
#include <QMetaType>
#include <QList>
#include <QProtobufObject>
#include <QProtobufLazyMessagePointer>
#include <QSharedPointer>

#include <memory>
#include <unordered_map>

#include <QtQml/QQmlListProperty>
#include <QQmlListPropertyConstructor>

#include <QAbstractGrpcClient>
#include <QGrpcCallReply>
#include <QGrpcStream>
#include "test_rpc.qpb.h"

namespace qtprotobuf {
namespace testrpc {

class EchoServiceClient : public QtProtobuf::QAbstractGrpcClient
{
    Q_OBJECT

public:
    explicit EchoServiceClient(QObject *parent = nullptr);
    QtProtobuf::QGrpcStatus Echo(const qtprotobuf::testrpc::EchoRequest &arg, const QPointer<qtprotobuf::testrpc::EchoResponse> &ret);
    QtProtobuf::QGrpcCallReplyShared Echo(const qtprotobuf::testrpc::EchoRequest &arg);
    Q_INVOKABLE void Echo(const qtprotobuf::testrpc::EchoRequest &arg, const QObject *context, const std::function<void(QtProtobuf::QGrpcCallReplyShared)> &callback);
    Q_INVOKABLE void Echo(qtprotobuf::testrpc::EchoRequest *arg, const QJSValue &callback, const QJSValue &errorCallback);
    Q_INVOKABLE void Echo(qtprotobuf::testrpc::EchoRequest *arg, qtprotobuf::testrpc::EchoResponse *ret, const QJSValue &errorCallback);


private:

};


}
}

