/* This file is autogenerated. DO NOT CHANGE. All changes will be lost */

#pragma once

#include <QObject>
#include <QMetaType>
#include <QList>
#include <QProtobufObject>
#include <QProtobufLazyMessagePointer>
#include <QSharedPointer>

#include <memory>
#include <unordered_map>

#include <QtQml/QQmlListProperty>
#include <QQmlListPropertyConstructor>

#include <QByteArray>
#include <QString>

namespace qtprotobuf {
namespace testrpc {
class EchoRequest;
using EchoRequestRepeated = QList<QSharedPointer<EchoRequest>>;

}
}


namespace qtprotobuf {
namespace testrpc {
class EchoResponse;
using EchoResponseRepeated = QList<QSharedPointer<EchoResponse>>;

}
}


namespace qtprotobuf {
namespace testrpc {
namespace EchoRequest_QtProtobufNested {
}

class EchoRequest : public QObject
{
    Q_OBJECT
    Q_PROTOBUF_OBJECT
    Q_DECLARE_PROTOBUF_SERIALIZERS(EchoRequest)
    Q_PROPERTY(QString message READ message WRITE setMessage NOTIFY messageChanged SCRIPTABLE true)

public:
    EchoRequest(QObject *parent = nullptr);
    EchoRequest(const QString &message,QObject *parent = nullptr);
    virtual ~EchoRequest();
    EchoRequest(const EchoRequest &other);
    EchoRequest &operator =(const EchoRequest &other);
    EchoRequest(EchoRequest &&other);
    EchoRequest &operator =(EchoRequest &&other);
    bool operator ==(const EchoRequest &other) const;
    bool operator !=(const EchoRequest &other) const;

    QString message() const {
        return m_message;
    }

    void setMessage(const QString &message);
    static void registerTypes();

signals:
    void messageChanged();

private:

private:
    QString m_message;
};

using EchoRequestRepeated = QList<QSharedPointer<EchoRequest>>;

}
}

Q_DECLARE_METATYPE(qtprotobuf::testrpc::EchoRequest)
Q_DECLARE_METATYPE(qtprotobuf::testrpc::EchoRequestRepeated)
Q_DECLARE_METATYPE(QQmlListProperty<qtprotobuf::testrpc::EchoRequest>)

namespace qtprotobuf {
namespace testrpc {
namespace EchoResponse_QtProtobufNested {
}

class EchoResponse : public QObject
{
    Q_OBJECT
    Q_PROTOBUF_OBJECT
    Q_DECLARE_PROTOBUF_SERIALIZERS(EchoResponse)
    Q_PROPERTY(QString message READ message WRITE setMessage NOTIFY messageChanged SCRIPTABLE true)

public:
    EchoResponse(QObject *parent = nullptr);
    EchoResponse(const QString &message,QObject *parent = nullptr);
    virtual ~EchoResponse();
    EchoResponse(const EchoResponse &other);
    EchoResponse &operator =(const EchoResponse &other);
    EchoResponse(EchoResponse &&other);
    EchoResponse &operator =(EchoResponse &&other);
    bool operator ==(const EchoResponse &other) const;
    bool operator !=(const EchoResponse &other) const;

    QString message() const {
        return m_message;
    }

    void setMessage(const QString &message);
    static void registerTypes();

signals:
    void messageChanged();

private:

private:
    QString m_message;
};

using EchoResponseRepeated = QList<QSharedPointer<EchoResponse>>;

}
}

Q_DECLARE_METATYPE(qtprotobuf::testrpc::EchoResponse)
Q_DECLARE_METATYPE(qtprotobuf::testrpc::EchoResponseRepeated)
Q_DECLARE_METATYPE(QQmlListProperty<qtprotobuf::testrpc::EchoResponse>)
