/* This file is autogenerated. DO NOT CHANGE. All changes will be lost */

#pragma once

#include <QObject>
#include <QMetaType>
#include <QList>
#include <QProtobufObject>
#include <QProtobufLazyMessagePointer>
#include <QSharedPointer>

#include <memory>
#include <unordered_map>

#include <QtQml/QQmlListProperty>
#include <QQmlListPropertyConstructor>

#include <QByteArray>
#include <QString>

namespace google {
namespace protobuf {
class SourceContext;
using SourceContextRepeated = QList<QSharedPointer<SourceContext>>;

}
}


namespace google {
namespace protobuf {
namespace SourceContext_QtProtobufNested {
}

class SourceContext : public QObject
{
    Q_OBJECT
    Q_PROTOBUF_OBJECT
    Q_DECLARE_PROTOBUF_SERIALIZERS(SourceContext)
    Q_PROPERTY(QString fileName READ fileName WRITE setFileName NOTIFY fileNameChanged SCRIPTABLE true)

public:
    SourceContext(QObject *parent = nullptr);
    SourceContext(const QString &fileName,QObject *parent = nullptr);
    virtual ~SourceContext();
    SourceContext(const SourceContext &other);
    SourceContext &operator =(const SourceContext &other);
    SourceContext(SourceContext &&other);
    SourceContext &operator =(SourceContext &&other);
    bool operator ==(const SourceContext &other) const;
    bool operator !=(const SourceContext &other) const;

    QString fileName() const {
        return m_fileName;
    }

    void setFileName(const QString &fileName);
    static void registerTypes();

signals:
    void fileNameChanged();

private:

private:
    QString m_fileName;
};

using SourceContextRepeated = QList<QSharedPointer<SourceContext>>;

}
}

Q_DECLARE_METATYPE(google::protobuf::SourceContext)
Q_DECLARE_METATYPE(google::protobuf::SourceContextRepeated)
Q_DECLARE_METATYPE(QQmlListProperty<google::protobuf::SourceContext>)
