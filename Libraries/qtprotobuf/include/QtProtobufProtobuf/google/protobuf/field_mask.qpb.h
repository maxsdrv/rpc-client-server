/* This file is autogenerated. DO NOT CHANGE. All changes will be lost */

#pragma once

#include <QObject>
#include <QMetaType>
#include <QList>
#include <QProtobufObject>
#include <QProtobufLazyMessagePointer>
#include <QSharedPointer>

#include <memory>
#include <unordered_map>

#include <QtQml/QQmlListProperty>
#include <QQmlListPropertyConstructor>

#include <QByteArray>
#include <QString>

namespace google {
namespace protobuf {
class FieldMask;
using FieldMaskRepeated = QList<QSharedPointer<FieldMask>>;

}
}


namespace google {
namespace protobuf {
namespace FieldMask_QtProtobufNested {
}

class FieldMask : public QObject
{
    Q_OBJECT
    Q_PROTOBUF_OBJECT
    Q_DECLARE_PROTOBUF_SERIALIZERS(FieldMask)
    Q_PROPERTY(QStringList pathsData READ paths WRITE setPaths NOTIFY pathsChanged SCRIPTABLE true)

public:
    FieldMask(QObject *parent = nullptr);
    FieldMask(const QStringList &paths,QObject *parent = nullptr);
    virtual ~FieldMask();
    FieldMask(const FieldMask &other);
    FieldMask &operator =(const FieldMask &other);
    FieldMask(FieldMask &&other);
    FieldMask &operator =(FieldMask &&other);
    bool operator ==(const FieldMask &other) const;
    bool operator !=(const FieldMask &other) const;

    QStringList paths() const {
        return m_paths;
    }

    QStringList &paths() {
        return m_paths;
    }

    void setPaths(const QStringList &paths);
    static void registerTypes();

signals:
    void pathsChanged();

private:

private:
    QStringList m_paths;
};

using FieldMaskRepeated = QList<QSharedPointer<FieldMask>>;

}
}

Q_DECLARE_METATYPE(google::protobuf::FieldMask)
Q_DECLARE_METATYPE(google::protobuf::FieldMaskRepeated)
Q_DECLARE_METATYPE(QQmlListProperty<google::protobuf::FieldMask>)
